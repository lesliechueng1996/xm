/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteRouteImport } from './routes/login/route'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as Authenticated403RouteImport } from './routes/_authenticated/403'
import { Route as AuthenticatedUsersIndexRouteImport } from './routes/_authenticated/users/index'
import { Route as AuthenticatedRolesIndexRouteImport } from './routes/_authenticated/roles/index'
import { Route as AuthenticatedFocusIndexRouteImport } from './routes/_authenticated/focus/index'
import { Route as AuthenticatedAccessesIndexRouteImport } from './routes/_authenticated/accesses/index'
import { Route as AuthenticatedUsersAddRouteImport } from './routes/_authenticated/users/add'
import { Route as AuthenticatedUsersUserIdRouteImport } from './routes/_authenticated/users/$userId'
import { Route as AuthenticatedRolesAddRouteImport } from './routes/_authenticated/roles/add'
import { Route as AuthenticatedFocusAddRouteImport } from './routes/_authenticated/focus/add'
import { Route as AuthenticatedAccessesAddRouteImport } from './routes/_authenticated/accesses/add'
import { Route as AuthenticatedAccessesAccessIdRouteImport } from './routes/_authenticated/accesses/$accessId'
import { Route as AuthenticatedRolesRoleIdEditRouteImport } from './routes/_authenticated/roles/$roleId/edit'
import { Route as AuthenticatedRolesRoleIdAccessRouteImport } from './routes/_authenticated/roles/$roleId/access'

const LoginRouteRoute = LoginRouteRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const Authenticated403Route = Authenticated403RouteImport.update({
  id: '/403',
  path: '/403',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedUsersIndexRoute = AuthenticatedUsersIndexRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedRolesIndexRoute = AuthenticatedRolesIndexRouteImport.update({
  id: '/roles/',
  path: '/roles/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedFocusIndexRoute = AuthenticatedFocusIndexRouteImport.update({
  id: '/focus/',
  path: '/focus/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedAccessesIndexRoute =
  AuthenticatedAccessesIndexRouteImport.update({
    id: '/accesses/',
    path: '/accesses/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedUsersAddRoute = AuthenticatedUsersAddRouteImport.update({
  id: '/users/add',
  path: '/users/add',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedUsersUserIdRoute =
  AuthenticatedUsersUserIdRouteImport.update({
    id: '/users/$userId',
    path: '/users/$userId',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedRolesAddRoute = AuthenticatedRolesAddRouteImport.update({
  id: '/roles/add',
  path: '/roles/add',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedFocusAddRoute = AuthenticatedFocusAddRouteImport.update({
  id: '/focus/add',
  path: '/focus/add',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedAccessesAddRoute =
  AuthenticatedAccessesAddRouteImport.update({
    id: '/accesses/add',
    path: '/accesses/add',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAccessesAccessIdRoute =
  AuthenticatedAccessesAccessIdRouteImport.update({
    id: '/accesses/$accessId',
    path: '/accesses/$accessId',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedRolesRoleIdEditRoute =
  AuthenticatedRolesRoleIdEditRouteImport.update({
    id: '/roles/$roleId/edit',
    path: '/roles/$roleId/edit',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedRolesRoleIdAccessRoute =
  AuthenticatedRolesRoleIdAccessRouteImport.update({
    id: '/roles/$roleId/access',
    path: '/roles/$roleId/access',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRouteRoute
  '/403': typeof Authenticated403Route
  '/': typeof AuthenticatedIndexRoute
  '/accesses/$accessId': typeof AuthenticatedAccessesAccessIdRoute
  '/accesses/add': typeof AuthenticatedAccessesAddRoute
  '/focus/add': typeof AuthenticatedFocusAddRoute
  '/roles/add': typeof AuthenticatedRolesAddRoute
  '/users/$userId': typeof AuthenticatedUsersUserIdRoute
  '/users/add': typeof AuthenticatedUsersAddRoute
  '/accesses': typeof AuthenticatedAccessesIndexRoute
  '/focus': typeof AuthenticatedFocusIndexRoute
  '/roles': typeof AuthenticatedRolesIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
  '/roles/$roleId/access': typeof AuthenticatedRolesRoleIdAccessRoute
  '/roles/$roleId/edit': typeof AuthenticatedRolesRoleIdEditRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRouteRoute
  '/403': typeof Authenticated403Route
  '/': typeof AuthenticatedIndexRoute
  '/accesses/$accessId': typeof AuthenticatedAccessesAccessIdRoute
  '/accesses/add': typeof AuthenticatedAccessesAddRoute
  '/focus/add': typeof AuthenticatedFocusAddRoute
  '/roles/add': typeof AuthenticatedRolesAddRoute
  '/users/$userId': typeof AuthenticatedUsersUserIdRoute
  '/users/add': typeof AuthenticatedUsersAddRoute
  '/accesses': typeof AuthenticatedAccessesIndexRoute
  '/focus': typeof AuthenticatedFocusIndexRoute
  '/roles': typeof AuthenticatedRolesIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
  '/roles/$roleId/access': typeof AuthenticatedRolesRoleIdAccessRoute
  '/roles/$roleId/edit': typeof AuthenticatedRolesRoleIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/login': typeof LoginRouteRoute
  '/_authenticated/403': typeof Authenticated403Route
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/accesses/$accessId': typeof AuthenticatedAccessesAccessIdRoute
  '/_authenticated/accesses/add': typeof AuthenticatedAccessesAddRoute
  '/_authenticated/focus/add': typeof AuthenticatedFocusAddRoute
  '/_authenticated/roles/add': typeof AuthenticatedRolesAddRoute
  '/_authenticated/users/$userId': typeof AuthenticatedUsersUserIdRoute
  '/_authenticated/users/add': typeof AuthenticatedUsersAddRoute
  '/_authenticated/accesses/': typeof AuthenticatedAccessesIndexRoute
  '/_authenticated/focus/': typeof AuthenticatedFocusIndexRoute
  '/_authenticated/roles/': typeof AuthenticatedRolesIndexRoute
  '/_authenticated/users/': typeof AuthenticatedUsersIndexRoute
  '/_authenticated/roles/$roleId/access': typeof AuthenticatedRolesRoleIdAccessRoute
  '/_authenticated/roles/$roleId/edit': typeof AuthenticatedRolesRoleIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/403'
    | '/'
    | '/accesses/$accessId'
    | '/accesses/add'
    | '/focus/add'
    | '/roles/add'
    | '/users/$userId'
    | '/users/add'
    | '/accesses'
    | '/focus'
    | '/roles'
    | '/users'
    | '/roles/$roleId/access'
    | '/roles/$roleId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/403'
    | '/'
    | '/accesses/$accessId'
    | '/accesses/add'
    | '/focus/add'
    | '/roles/add'
    | '/users/$userId'
    | '/users/add'
    | '/accesses'
    | '/focus'
    | '/roles'
    | '/users'
    | '/roles/$roleId/access'
    | '/roles/$roleId/edit'
  id:
    | '__root__'
    | '/_authenticated'
    | '/login'
    | '/_authenticated/403'
    | '/_authenticated/'
    | '/_authenticated/accesses/$accessId'
    | '/_authenticated/accesses/add'
    | '/_authenticated/focus/add'
    | '/_authenticated/roles/add'
    | '/_authenticated/users/$userId'
    | '/_authenticated/users/add'
    | '/_authenticated/accesses/'
    | '/_authenticated/focus/'
    | '/_authenticated/roles/'
    | '/_authenticated/users/'
    | '/_authenticated/roles/$roleId/access'
    | '/_authenticated/roles/$roleId/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  LoginRouteRoute: typeof LoginRouteRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/403': {
      id: '/_authenticated/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof Authenticated403RouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/users/': {
      id: '/_authenticated/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedUsersIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/roles/': {
      id: '/_authenticated/roles/'
      path: '/roles'
      fullPath: '/roles'
      preLoaderRoute: typeof AuthenticatedRolesIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/focus/': {
      id: '/_authenticated/focus/'
      path: '/focus'
      fullPath: '/focus'
      preLoaderRoute: typeof AuthenticatedFocusIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/accesses/': {
      id: '/_authenticated/accesses/'
      path: '/accesses'
      fullPath: '/accesses'
      preLoaderRoute: typeof AuthenticatedAccessesIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/users/add': {
      id: '/_authenticated/users/add'
      path: '/users/add'
      fullPath: '/users/add'
      preLoaderRoute: typeof AuthenticatedUsersAddRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/users/$userId': {
      id: '/_authenticated/users/$userId'
      path: '/users/$userId'
      fullPath: '/users/$userId'
      preLoaderRoute: typeof AuthenticatedUsersUserIdRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/roles/add': {
      id: '/_authenticated/roles/add'
      path: '/roles/add'
      fullPath: '/roles/add'
      preLoaderRoute: typeof AuthenticatedRolesAddRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/focus/add': {
      id: '/_authenticated/focus/add'
      path: '/focus/add'
      fullPath: '/focus/add'
      preLoaderRoute: typeof AuthenticatedFocusAddRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/accesses/add': {
      id: '/_authenticated/accesses/add'
      path: '/accesses/add'
      fullPath: '/accesses/add'
      preLoaderRoute: typeof AuthenticatedAccessesAddRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/accesses/$accessId': {
      id: '/_authenticated/accesses/$accessId'
      path: '/accesses/$accessId'
      fullPath: '/accesses/$accessId'
      preLoaderRoute: typeof AuthenticatedAccessesAccessIdRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/roles/$roleId/edit': {
      id: '/_authenticated/roles/$roleId/edit'
      path: '/roles/$roleId/edit'
      fullPath: '/roles/$roleId/edit'
      preLoaderRoute: typeof AuthenticatedRolesRoleIdEditRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/roles/$roleId/access': {
      id: '/_authenticated/roles/$roleId/access'
      path: '/roles/$roleId/access'
      fullPath: '/roles/$roleId/access'
      preLoaderRoute: typeof AuthenticatedRolesRoleIdAccessRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
  }
}

interface AuthenticatedRouteRouteChildren {
  Authenticated403Route: typeof Authenticated403Route
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedAccessesAccessIdRoute: typeof AuthenticatedAccessesAccessIdRoute
  AuthenticatedAccessesAddRoute: typeof AuthenticatedAccessesAddRoute
  AuthenticatedFocusAddRoute: typeof AuthenticatedFocusAddRoute
  AuthenticatedRolesAddRoute: typeof AuthenticatedRolesAddRoute
  AuthenticatedUsersUserIdRoute: typeof AuthenticatedUsersUserIdRoute
  AuthenticatedUsersAddRoute: typeof AuthenticatedUsersAddRoute
  AuthenticatedAccessesIndexRoute: typeof AuthenticatedAccessesIndexRoute
  AuthenticatedFocusIndexRoute: typeof AuthenticatedFocusIndexRoute
  AuthenticatedRolesIndexRoute: typeof AuthenticatedRolesIndexRoute
  AuthenticatedUsersIndexRoute: typeof AuthenticatedUsersIndexRoute
  AuthenticatedRolesRoleIdAccessRoute: typeof AuthenticatedRolesRoleIdAccessRoute
  AuthenticatedRolesRoleIdEditRoute: typeof AuthenticatedRolesRoleIdEditRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  Authenticated403Route: Authenticated403Route,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedAccessesAccessIdRoute: AuthenticatedAccessesAccessIdRoute,
  AuthenticatedAccessesAddRoute: AuthenticatedAccessesAddRoute,
  AuthenticatedFocusAddRoute: AuthenticatedFocusAddRoute,
  AuthenticatedRolesAddRoute: AuthenticatedRolesAddRoute,
  AuthenticatedUsersUserIdRoute: AuthenticatedUsersUserIdRoute,
  AuthenticatedUsersAddRoute: AuthenticatedUsersAddRoute,
  AuthenticatedAccessesIndexRoute: AuthenticatedAccessesIndexRoute,
  AuthenticatedFocusIndexRoute: AuthenticatedFocusIndexRoute,
  AuthenticatedRolesIndexRoute: AuthenticatedRolesIndexRoute,
  AuthenticatedUsersIndexRoute: AuthenticatedUsersIndexRoute,
  AuthenticatedRolesRoleIdAccessRoute: AuthenticatedRolesRoleIdAccessRoute,
  AuthenticatedRolesRoleIdEditRoute: AuthenticatedRolesRoleIdEditRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  LoginRouteRoute: LoginRouteRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
