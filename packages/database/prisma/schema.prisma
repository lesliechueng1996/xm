generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AdminUser {
  id        String    @id @default(cuid())
  username  String    @unique
  password  String
  mobile    String
  email     String
  status    Int       @default(1)
  roleId    String    @map("role_id")
  role      AdminRole @relation(fields: [roleId], references: [id])
  isSuper   Int       @default(0) @map("is_super")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  @@map("t_admin_user")
}

model AdminRole {
  id          String   @id @default(cuid())
  name        String
  description String?
  status      Int      @default(1)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  users    AdminUser[]
  accesses RolesOnAccesses[]

  @@map("t_admin_role")
}

model AdminAccess {
  id          String   @id @default(cuid())
  accessName  String   @map("access_name")
  key         String?
  // 1: 模块，2: 菜单，3: 操作
  type        Int
  url         String?
  parentId    String?  @map("parent_id")
  sort        Int      @default(100)
  description String?
  status      Int      @default(1)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  roles RolesOnAccesses[]

  @@map("t_admin_access")
}

model RolesOnAccesses {
  id        String      @id @default(cuid())
  roleId    String      @map("role_id")
  role      AdminRole   @relation(fields: [roleId], references: [id])
  accessId  String      @map("access_id")
  access    AdminAccess @relation(fields: [accessId], references: [id])
  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime    @updatedAt @map("updated_at")

  @@map("t_admin_role_access")
}

model Focus {
  id        String   @id @default(cuid())
  title     String
  type      Int
  focusImg  String   @map("focus_img")
  link      String
  sort      Int
  status    Int      @default(1)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("t_focus")
}

model GoodType {
  id          String   @id @default(cuid())
  title       String
  description String?
  status      Int      @default(1)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("t_good_type")
}
